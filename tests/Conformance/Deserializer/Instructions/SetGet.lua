-- file was auto-generated by `fiu-tests`
--!ctx Luau

local ok, compileResult = Luau.compile([[
-- tests: LOP_SETTABLEKS, LOP_GETTABLEKS, LOP_SETTABLEN, LOP_GETTABLEN, LOP_SETTABLE, LOP_GETTABLE, LOP_SETGLOBAL, LOP_GETGLOBAL, LOP_GETIMPORT

local t = {}

-- SETTABLEKS
t.Foo = 123
-- GETTABLEKS
assert(t.Foo == 123, "GETTABLEKS Failed")

-- SETTABLEN
t[1] = 456
-- GETTABLEN
assert(t[1] == 456, "GETTABLEN Failed")

-- SETTABLE
local k = {}
t[k] = 789
-- GETTABLE
assert(t[k] == 789, "GETTABLE Failed")

-- SETGLOBAL
global_t = {a = 1, b = 2}
-- GETGLOBAL
assert(global_t and type(global_t) == "table" and #global_t == 0 and global_t.a == 1 and global_t.b == 2, "GETGLOBAL Failed")

-- GETIMPORT
assert(math, "Math is missing")
assert(math.min and type(math.min) == "function", "GETIMPORT Failed")

OK()
]], {
	optimizationLevel = 2,
	debugLevel = 2,
	coverageLevel = 0,
	vectorLib = nil,
	vectorCtor = nil,
	vectorType = nil
})

if not ok then
	error(`Failed to compile, error: {compileResult}`)
end

local encodedModule, constantList, stringList = [[
3; 1; 0 6 0 0 1 1 ? 125 29 0 [] 1 [1,3,3,6,6,6,8,8,8,8,8,8,8,8,8,8,8,8,11,11,13,13,13,13,13,13,13,13,13,13,13,16,16,17,17,19,19,19,19,19,19,19,19,19,19,19,22,22,22,22,22,22,22,22,22,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,30,30,30,31,] {
	65 1 0 ? 0 ? ? ? ? ? ? ? ? ? ? ?; 53 2 0 1 0 1 ? ? ? ? ? ? ? ? ? 1; ~ 1; 4 4 0 ? 1 ? ? 123 ? ? ? ? ? ? ? ?
	16 3 1 0 1 0 47 ? ? 1 ? ? ? ? ? 1; ~ 0; 15 3 1 0 3 0 47 ? ? 1 ? ? ? ? ? 1; ~ 0
	79 4 6 1 3 ? ? 2 ? 2 ? ? ? 0 ? 1; ~ 1; 3 3 0 ? 2 0 1 ? ? ? ? ? ? ? ? ?; 3 3 0 ? 2 1 0 ? ? ? ? ? ? ? ? ?
	75 3 1 2 1 2 4 ? ? 3 ? ? ? ? ? 1; ~ 2; 5 4 3 ? 3 ? ? 2 ? 3 ? ? ? ? ? ?; 12 4 4 1076887552 1 ? ? 4 ? ? 4 ? ? ? 1 1
	~ 1076887552; 21 3 0 ? 1 3 1 ? ? ? ? ? ? ? ? ?; 4 4 0 ? 1 ? ? 456 ? ? ? ? ? ? ? ?; 18 3 0 ? 1 0 0 ? ? ? ? ? ? ? ? ?
	17 3 0 ? 3 0 0 ? ? ? ? ? ? ? ? ?; 79 4 6 5 3 ? ? 2 ? 6 ? ? ? 0 ? 1; ~ 5; 3 3 0 ? 2 0 1 ? ? ? ? ? ? ? ? ?
	3 3 0 ? 2 1 0 ? ? ? ? ? ? ? ? ?; 75 3 1 6 1 2 4 ? ? 7 ? ? ? ? ? 1; ~ 6; 5 4 3 ? 3 ? ? 6 ? 7 ? ? ? ? ? ?
	12 4 4 1076887552 1 ? ? 4 ? ? 4 ? ? ? 1 1; ~ 1076887552; 21 3 0 ? 1 3 1 ? ? ? ? ? ? ? ? ?; 53 2 0 0 1 0 ? ? ? ? ? ? ? ? ? 1
	~ 0; 4 4 0 ? 2 ? ? 789 ? ? ? ? ? ? ? ?; 14 3 0 ? 2 0 1 ? ? ? ? ? ? ? ? ?; 13 3 0 ? 4 0 1 ? ? ? ? ? ? ? ? ?
	79 4 6 7 4 ? ? 2 ? 8 ? ? ? 0 ? 1; ~ 7; 3 3 0 ? 3 0 1 ? ? ? ? ? ? ? ? ?; 3 3 0 ? 3 1 0 ? ? ? ? ? ? ? ? ?
	75 3 1 8 1 3 4 ? ? 9 ? ? ? ? ? 1; ~ 8; 5 4 3 ? 4 ? ? 8 ? 9 ? ? ? ? ? ?; 12 4 4 1076887552 2 ? ? 4 ? ? 4 ? ? ? 1 1
	~ 1076887552; 21 3 0 ? 2 3 1 ? ? ? ? ? ? ? ? ?; 54 4 3 ? 2 ? ? 11 ? 12 ? ? ? ? ? ?; 4 4 0 ? 3 ? ? 1 ? ? ? ? ? ? ? ?
	16 3 1 9 3 2 128 ? ? 10 ? ? ? ? ? 1; ~ 9; 4 4 0 ? 3 ? ? 2 ? ? ? ? ? ? ? ?; 16 3 1 10 3 2 131 ? ? 11 ? ? ? ? ? 1
	~ 10; 8 1 1 12 2 ? ? ? ? 13 ? ? ? ? ? 1; ~ 12; 7 1 1 12 3 ? ? ? ? 13 ? ? ? ? ? 1
	~ 12; 26 4 0 ? 3 ? ? 30 ? ? ? ? ? ? ? ?; 3 3 0 ? 3 0 0 ? ? ? ? ? ? ? ? ?; 7 1 1 12 5 ? ? ? ? 13 ? ? ? ? ? 1
	~ 12; 73 3 0 ? 40 5 2 ? ? ? ? ? ? ? ? ?; 12 4 4 1087373312 4 ? ? 14 ? ? 14 ? ? ? 1 1; ~ 1087373312
	21 3 0 ? 4 2 2 ? ? ? ? ? ? ? ? ?; 80 4 6 2147483663 4 ? ? 22 ? 16 ? ? ? 1 ? 1; ~ 2147483663; 3 3 0 ? 3 0 0 ? ? ? ? ? ? ? ? ?
	7 1 1 12 5 ? ? ? ? 13 ? ? ? ? ? 1; ~ 12; 52 2 0 ? 4 5 ? ? ? ? ? ? ? ? ? ?; 79 4 6 2147483664 4 ? ? 16 ? 17 ? ? ? 1 ? 1
	~ 2147483664; 3 3 0 ? 3 0 0 ? ? ? ? ? ? ? ? ?; 7 1 1 12 5 ? ? ? ? 13 ? ? ? ? ? 1; ~ 12
	15 3 1 9 4 5 128 ? ? 10 ? ? ? ? ? 1; ~ 9; 79 4 6 2147483665 4 ? ? 9 ? 18 ? ? ? 1 ? 1; ~ 2147483665
	7 1 1 12 5 ? ? ? ? 13 ? ? ? ? ? 1; ~ 12; 15 3 1 10 4 5 131 ? ? 11 ? ? ? ? ? 1; ~ 10
	79 4 6 18 4 ? ? 2 ? 19 ? ? ? 0 ? 1; ~ 18; 3 3 0 ? 3 0 1 ? ? ? ? ? ? ? ? ?; 3 3 0 ? 3 1 0 ? ? ? ? ? ? ? ? ?
	75 3 1 19 1 3 4 ? ? 20 ? ? ? ? ? 1; ~ 19; 5 4 3 ? 4 ? ? 19 ? 20 ? ? ? ? ? ?; 12 4 4 1076887552 2 ? ? 4 ? ? 4 ? ? ? 1 1
	~ 1076887552; 21 3 0 ? 2 3 1 ? ? ? ? ? ? ? ? ?; 12 4 4 1094713344 3 ? ? 21 ? ? 21 ? ? ? 1 1; ~ 1094713344
	75 3 1 22 1 3 4 ? ? 23 ? ? ? ? ? 1; ~ 22; 5 4 3 ? 4 ? ? 22 ? 23 ? ? ? ? ? ?; 12 4 4 1076887552 2 ? ? 4 ? ? 4 ? ? ? 1 1
	~ 1076887552; 21 3 0 ? 2 3 1 ? ? ? ? ? ? ? ? ?; 12 4 4 2168478720 3 ? ? 24 ? ? 21 24 ? ? 2 1; ~ 2168478720
	26 4 0 ? 3 ? ? 10 ? ? ? ? ? ? ? ?; 12 4 4 2168478720 5 ? ? 24 ? ? 21 24 ? ? 2 1; ~ 2168478720; 73 3 0 ? 40 5 2 ? ? ? ? ? ? ? ? ?
	12 4 4 1087373312 4 ? ? 14 ? ? 14 ? ? ? 1 1; ~ 1087373312; 21 3 0 ? 4 2 2 ? ? ? ? ? ? ? ? ?; 80 4 6 25 4 ? ? 2 ? 26 ? ? ? 0 ? 1
	~ 25; 3 3 0 ? 3 0 1 ? ? ? ? ? ? ? ? ?; 3 3 0 ? 3 1 0 ? ? ? ? ? ? ? ? ?; 75 3 1 26 1 3 4 ? ? 27 ? ? ? ? ? 1
	~ 26; 5 4 3 ? 4 ? ? 26 ? 27 ? ? ? ? ? ?; 12 4 4 1076887552 2 ? ? 4 ? ? 4 ? ? ? 1 1; ~ 1076887552
	21 3 0 ? 2 3 1 ? ? ? ? ? ? ? ? ?; 12 4 4 1102053376 2 ? ? 28 ? ? 28 ? ? ? 1 1; ~ 1102053376; 21 3 0 ? 2 1 1 ? ? ? ? ? ? ? ? ?
	22 2 0 ? 0 1 ? ? ? ? ? ? ? ? ? ?
}]], {
	{ "1",123,"2","3",1076887552,456,"4",789,"5","6","7",{ 9,10,},"8","9",1087373312,
		"10",0,1,2,"11","12",1094713344,"13","14",2168478720,"15",
		"16","17",1102053376,
	},
}, {
	"\70\111\111","\71\69\84\84\65\66\76\69\75\83\32\70\97\105\108\101\100","\97\115\115\101\114\116",
	"\71\69\84\84\65\66\76\69\78\32\70\97\105\108\101\100","\71\69\84\84\65\66\76\69\32\70\97\105\108\101\100",
	"\97","\98","\103\108\111\98\97\108\95\116","\116\121\112\101","\116\97\98\108\101","\71\69\84\71\76\79\66\65\76\32\70\97\105\108\101\100",
	"\109\97\116\104","\77\97\116\104\32\105\115\32\109\105\115\115\105\110\103","\109\105\110","\102\117\110\99\116\105\111\110",
	"\71\69\84\73\77\80\79\82\84\32\70\97\105\108\101\100","\79\75","\116","\107",
}

assert(MATCH(
	Fiu.luau_deserialize(compileResult),
	FiuUtils.decodeModule(encodedModule, constantList, stringList)
))

OK()
