-- file was auto-generated by `fiu-tests`
--!ctx Luau

local ok, compileResult = Luau.compile([[
-- tests: LOP_GETUPVAL, LOP_SETUPVAL

-- test for upvalues
local a = 1
local function f()
	return a
end
assert(f() == 1)

local function g()
	local a = 2
	return f()
end
assert(g() == 1)

local function h()
	local a = 3
	local function f()
		return a
	end
	return f()
end
assert(h() == 3)

local function i()
	local a = 4
	local function f()
		return a
	end
	a = 5
	return f()
end
assert(i() == 5)

local function j()
	local a = 6
	local function f()
		return a
	end
	local a = 7
	return f()
end
assert(j() == 6)

local function k()
	local a = 8
	local function f()
		return a
	end
	do
		local a = 9
		return f()
	end
end
assert(k() == 8)

local a = 10
do
	local a = 11
	local function f()
		return a
	end
	assert(f() == 11)
end

local function l()
	local a = 12
	local function f()
		return a
	end
	do
		a = 13
		return f()
	end
end
assert(l() == 13)

OK()
]], {
	optimizationLevel = 2,
	debugLevel = 2,
	coverageLevel = 0,
	vectorLib = nil,
	vectorCtor = nil,
	vectorType = nil
})

if not ok then
	error(`Failed to compile, error: {compileResult}`)
end

local encodedModule, constantList, stringList = [[
3; 14; 0 1 0 1 0 5 1 2 0 0 [] 1 [6,6,] {
	4 4 0 ? 0 ? ? 1 ? ? ? ? ? ? ? ?; 22 2 0 ? 0 2 ? ? ? ? ? ? ? ? ? ?
}
1 2 0 0 0 10 3 3 0 0 [] 1 [11,262,262,] {
	4 4 0 ? 0 ? ? 2 ? ? ? ? ? ? ? ?; 4 4 0 ? 1 ? ? 1 ? ? ? ? ? ? ? ?; 22 2 0 ? 1 2 ? ? ? ? ? ? ? ? ? ?
}
2 1 0 1 0 18 1 2 0 0 [] 1 [19,19,] {
	4 4 0 ? 0 ? ? 3 ? ? ? ? ? ? ? ?; 22 2 0 ? 0 2 ? ? ? ? ? ? ? ? ? ?
}
3 3 0 0 0 16 4 5 0 1 [3,] 1 [17,18,18,19,19,] {
	4 4 0 ? 0 ? ? 3 ? ? ? ? ? ? ? ?; 19 4 0 ? 1 ? ? 0 ? ? ? ? ? ? ? ?; 70 2 0 ? 0 0 ? ? ? ? ? ? ? ? ? ?; 4 4 0 ? 2 ? ? 3 ? ? ? ? ? ? ? ?
	22 2 0 ? 2 2 ? ? ? ? ? ? ? ? ? ?
}
4 1 0 1 0 27 1 2 0 0 [] 1 [28,28,] {
	9 2 0 ? 0 0 ? ? ? ? ? ? ? ? ? ?; 22 2 0 ? 0 2 ? ? ? ? ? ? ? ? ? ?
}
5 3 0 0 0 25 5 7 0 1 [5,] 1 [26,27,27,30,284,284,284,] {
	4 4 0 ? 0 ? ? 4 ? ? ? ? ? ? ? ?; 19 4 0 ? 1 ? ? 0 ? ? ? ? ? ? ? ?; 70 2 0 ? 1 0 ? ? ? ? ? ? ? ? ? ?; 4 4 0 ? 0 ? ? 5 ? ? ? ? ? ? ? ?
	6 2 0 ? 2 0 ? ? ? ? ? ? ? ? ? ?; 11 1 0 ? 0 ? ? ? ? ? ? ? ? ? ? ?; 22 2 0 ? 2 2 ? ? ? ? ? ? ? ? ? ?
}
6 1 0 1 0 37 1 2 0 0 [] 1 [38,38,] {
	4 4 0 ? 0 ? ? 6 ? ? ? ? ? ? ? ?; 22 2 0 ? 0 2 ? ? ? ? ? ? ? ? ? ?
}
7 4 0 0 0 35 6 6 0 1 [7,] 1 [36,37,37,40,294,294,] {
	4 4 0 ? 0 ? ? 6 ? ? ? ? ? ? ? ?; 19 4 0 ? 1 ? ? 0 ? ? ? ? ? ? ? ?; 70 2 0 ? 0 0 ? ? ? ? ? ? ? ? ? ?; 4 4 0 ? 2 ? ? 7 ? ? ? ? ? ? ? ?
	4 4 0 ? 3 ? ? 6 ? ? ? ? ? ? ? ?; 22 2 0 ? 3 2 ? ? ? ? ? ? ? ? ? ?
}
8 1 0 1 0 47 1 2 0 0 [] 1 [48,48,] {
	4 4 0 ? 0 ? ? 8 ? ? ? ? ? ? ? ?; 22 2 0 ? 0 2 ? ? ? ? ? ? ? ? ? ?
}
9 4 0 0 0 45 7 6 0 1 [9,] 1 [46,47,47,51,304,304,] {
	4 4 0 ? 0 ? ? 8 ? ? ? ? ? ? ? ?; 19 4 0 ? 1 ? ? 0 ? ? ? ? ? ? ? ?; 70 2 0 ? 0 0 ? ? ? ? ? ? ? ? ? ?; 4 4 0 ? 2 ? ? 9 ? ? ? ? ? ? ? ?
	4 4 0 ? 3 ? ? 8 ? ? ? ? ? ? ? ?; 22 2 0 ? 3 2 ? ? ? ? ? ? ? ? ? ?
}
10 1 0 1 0 60 1 2 0 0 [] 1 [61,61,] {
	4 4 0 ? 0 ? ? 11 ? ? ? ? ? ? ? ?; 22 2 0 ? 0 2 ? ? ? ? ? ? ? ? ? ?
}
11 1 0 1 0 68 1 2 0 0 [] 1 [69,69,] {
	9 2 0 ? 0 0 ? ? ? ? ? ? ? ? ? ?; 22 2 0 ? 0 2 ? ? ? ? ? ? ? ? ? ?
}
12 3 0 0 0 66 8 7 0 1 [12,] 1 [67,68,68,72,325,325,325,] {
	4 4 0 ? 0 ? ? 12 ? ? ? ? ? ? ? ?; 19 4 0 ? 1 ? ? 0 ? ? ? ? ? ? ? ?; 70 2 0 ? 1 0 ? ? ? ? ? ? ? ? ? ?; 4 4 0 ? 0 ? ? 13 ? ? ? ? ? ? ? ?
	6 2 0 ? 2 0 ? ? ? ? ? ? ? ? ? ?; 11 1 0 ? 0 ? ? ? ? ? ? ? ? ? ? ?; 22 2 0 ? 2 2 ? ? ? ? ? ? ? ? ? ?
}
13 14 0 0 1 1 ? 114 19 13 [1,2,4,3,6,5,8,7,10,9,11,13,12,] 1 [1,4,5,5,6,6,6,6,6,6,8,8,8,10,11,262,262,262,262,262,262,270,270,270,272,273,274,274,275,275,275,275,275,275,279,279,279,281,282,283,283,286,540,540,540,540,540,540,540,545,545,545,547,548,549,549,552,806,806,806,806,806,806,811,811,811,813,814,815,815,819,1072,1072,1072,1072,1072,1072,1072,1079,1079,1079,1081,1083,1084,1084,1085,1085,1085,1085,1085,1085,1087,1087,1087,1090,1091,1092,1092,1096,1349,1349,1349,1349,1349,1349,1349,1349,1356,1356,1356,1358,1358,1358,1359,] {
	65 1 0 ? 0 ? ? ? ? ? ? ? ? ? ? ?; 4 4 0 ? 0 ? ? 1 ? ? ? ? ? ? ? ?; 64 4 3 ? 1 ? ? 0 ? 1 ? ? ? ? ? ?; 70 2 0 ? 0 0 ? ? ? ? ? ? ? ? ? ?
	4 4 0 ? 4 ? ? 1 ? ? ? ? ? ? ? ?; 79 4 6 1 4 ? ? 2 ? 2 ? ? ? 0 ? 1; ~ 1; 3 3 0 ? 3 0 1 ? ? ? ? ? ? ? ? ?
	3 3 0 ? 3 1 0 ? ? ? ? ? ? ? ? ?; 73 3 0 ? 1 3 2 ? ? ? ? ? ? ? ? ?; 12 4 4 1075838976 2 ? ? 3 ? ? 3 ? ? ? 1 1; ~ 1075838976
	21 3 0 ? 2 2 1 ? ? ? ? ? ? ? ? ?; 64 4 3 ? 2 ? ? 4 ? 2 ? ? ? ? ? ?; 4 4 0 ? 6 ? ? 2 ? ? ? ? ? ? ? ?; 4 4 0 ? 5 ? ? 1 ? ? ? ? ? ? ? ?
	79 4 6 1 5 ? ? 2 ? 2 ? ? ? 0 ? 1; ~ 1; 3 3 0 ? 4 0 1 ? ? ? ? ? ? ? ? ?; 3 3 0 ? 4 1 0 ? ? ? ? ? ? ? ? ?
	73 3 0 ? 1 4 2 ? ? ? ? ? ? ? ? ?; 12 4 4 1075838976 3 ? ? 3 ? ? 3 ? ? ? 1 1; ~ 1075838976; 21 3 0 ? 3 2 1 ? ? ? ? ? ? ? ? ?
	64 4 3 ? 3 ? ? 5 ? 6 ? ? ? ? ? ?; 4 4 0 ? 7 ? ? 3 ? ? ? ? ? ? ? ?; 19 4 0 ? 8 ? ? 3 ? ? ? ? ? ? ? ?; 70 2 0 ? 0 7 ? ? ? ? ? ? ? ? ? ?
	4 4 0 ? 6 ? ? 3 ? ? ? ? ? ? ? ?; 79 4 6 6 6 ? ? 2 ? 6 ? ? ? 0 ? 1; ~ 6; 3 3 0 ? 5 0 1 ? ? ? ? ? ? ? ? ?
	3 3 0 ? 5 1 0 ? ? ? ? ? ? ? ? ?; 73 3 0 ? 1 5 2 ? ? ? ? ? ? ? ? ?; 12 4 4 1075838976 4 ? ? 3 ? ? 3 ? ? ? 1 1; ~ 1075838976
	21 3 0 ? 4 2 1 ? ? ? ? ? ? ? ? ?; 64 4 3 ? 4 ? ? 7 ? 8 ? ? ? ? ? ?; 4 4 0 ? 8 ? ? 4 ? ? ? ? ? ? ? ?; 19 4 0 ? 9 ? ? 5 ? ? ? ? ? ? ? ?
	70 2 0 ? 1 8 ? ? ? ? ? ? ? ? ? ?; 4 4 0 ? 8 ? ? 5 ? ? ? ? ? ? ? ?; 6 2 0 ? 7 8 ? ? ? ? ? ? ? ? ? ?; 11 1 0 ? 8 ? ? ? ? ? ? ? ? ? ? ?
	79 4 6 8 7 ? ? 2 ? 8 ? ? ? 0 ? 1; ~ 8; 3 3 0 ? 6 0 1 ? ? ? ? ? ? ? ? ?; 3 3 0 ? 6 1 0 ? ? ? ? ? ? ? ? ?
	73 3 0 ? 1 6 2 ? ? ? ? ? ? ? ? ?; 12 4 4 1075838976 5 ? ? 3 ? ? 3 ? ? ? 1 1; ~ 1075838976; 21 3 0 ? 5 2 1 ? ? ? ? ? ? ? ? ?
	64 4 3 ? 5 ? ? 9 ? 10 ? ? ? ? ? ?; 4 4 0 ? 9 ? ? 6 ? ? ? ? ? ? ? ?; 19 4 0 ? 10 ? ? 7 ? ? ? ? ? ? ? ?; 70 2 0 ? 0 9 ? ? ? ? ? ? ? ? ? ?
	4 4 0 ? 11 ? ? 7 ? ? ? ? ? ? ? ?; 4 4 0 ? 8 ? ? 6 ? ? ? ? ? ? ? ?; 79 4 6 10 8 ? ? 2 ? 11 ? ? ? 0 ? 1; ~ 10
	3 3 0 ? 7 0 1 ? ? ? ? ? ? ? ? ?; 3 3 0 ? 7 1 0 ? ? ? ? ? ? ? ? ?; 73 3 0 ? 1 7 2 ? ? ? ? ? ? ? ? ?; 12 4 4 1075838976 6 ? ? 3 ? ? 3 ? ? ? 1 1
	~ 1075838976; 21 3 0 ? 6 2 1 ? ? ? ? ? ? ? ? ?; 64 4 3 ? 6 ? ? 11 ? 12 ? ? ? ? ? ?; 4 4 0 ? 10 ? ? 8 ? ? ? ? ? ? ? ?
	19 4 0 ? 11 ? ? 9 ? ? ? ? ? ? ? ?; 70 2 0 ? 0 10 ? ? ? ? ? ? ? ? ? ?; 4 4 0 ? 12 ? ? 9 ? ? ? ? ? ? ? ?; 4 4 0 ? 9 ? ? 8 ? ? ? ? ? ? ? ?
	23 4 0 ? 0 ? ? 0 ? ? ? ? ? ? ? ?; 79 4 6 12 9 ? ? 2 ? 13 ? ? ? 0 ? 1; ~ 12; 3 3 0 ? 8 0 1 ? ? ? ? ? ? ? ? ?
	3 3 0 ? 8 1 0 ? ? ? ? ? ? ? ? ?; 73 3 0 ? 1 8 2 ? ? ? ? ? ? ? ? ?; 12 4 4 1075838976 7 ? ? 3 ? ? 3 ? ? ? 1 1; ~ 1075838976
	21 3 0 ? 7 2 1 ? ? ? ? ? ? ? ? ?; 4 4 0 ? 7 ? ? 10 ? ? ? ? ? ? ? ?; 4 4 0 ? 8 ? ? 11 ? ? ? ? ? ? ? ?; 64 4 3 ? 9 ? ? 13 ? 14 ? ? ? ? ? ?
	70 2 0 ? 0 8 ? ? ? ? ? ? ? ? ? ?; 4 4 0 ? 12 ? ? 11 ? ? ? ? ? ? ? ?; 79 4 6 14 12 ? ? 2 ? 15 ? ? ? 0 ? 1; ~ 14
	3 3 0 ? 11 0 1 ? ? ? ? ? ? ? ? ?; 3 3 0 ? 11 1 0 ? ? ? ? ? ? ? ? ?; 73 3 0 ? 1 11 2 ? ? ? ? ? ? ? ? ?; 12 4 4 1075838976 10 ? ? 3 ? ? 3 ? ? ? 1 1
	~ 1075838976; 21 3 0 ? 10 2 1 ? ? ? ? ? ? ? ? ?; 64 4 3 ? 8 ? ? 15 ? 16 ? ? ? ? ? ?; 4 4 0 ? 12 ? ? 12 ? ? ? ? ? ? ? ?
	19 4 0 ? 13 ? ? 12 ? ? ? ? ? ? ? ?; 70 2 0 ? 1 12 ? ? ? ? ? ? ? ? ? ?; 4 4 0 ? 12 ? ? 13 ? ? ? ? ? ? ? ?; 6 2 0 ? 11 12 ? ? ? ? ? ? ? ? ? ?
	11 1 0 ? 12 ? ? ? ? ? ? ? ? ? ? ?; 23 4 0 ? 0 ? ? 0 ? ? ? ? ? ? ? ?; 79 4 6 16 11 ? ? 2 ? 17 ? ? ? 0 ? 1; ~ 16
	3 3 0 ? 10 0 1 ? ? ? ? ? ? ? ? ?; 3 3 0 ? 10 1 0 ? ? ? ? ? ? ? ? ?; 73 3 0 ? 1 10 2 ? ? ? ? ? ? ? ? ?; 12 4 4 1075838976 9 ? ? 3 ? ? 3 ? ? ? 1 1
	~ 1075838976; 21 3 0 ? 9 2 1 ? ? ? ? ? ? ? ? ?; 12 4 4 1091567616 9 ? ? 18 ? ? 18 ? ? ? 1 1; ~ 1091567616
	21 3 0 ? 9 1 1 ? ? ? ? ? ? ? ? ?; 22 2 0 ? 0 1 ? ? ? ? ? ? ? ? ? ?
}]], {
	{ },{ },{ },{ },{ },{ },{ },{ },{ },{ },{ },{ },{ },{ 0,1,"9",1075838976,1,3,3,5,5,7,6,9,8,10,11,12,13,"10",1091567616,},
}, {
	"\102","\97","\103","\104","\105","\106","\107","\108","\97\115\115\101\114\116","\79\75",
}

assert(MATCH(
	Fiu.luau_deserialize(compileResult),
	FiuUtils.decodeModule(encodedModule, constantList, stringList)
))

OK()
